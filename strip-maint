#!/bin/sh

# ros-debbah/strip-maint

set -eu

readonly this="$(readlink -f "$0")"
readonly here="$(dirname "${this}")"
readonly whatami="$(basename "${here}").$(basename "${this}")"
readonly tmpdir="$(mktemp -dt "${whatami}.XXXXXX")"

log() { echo "${whatami}[$$]: $@" >&2; }
error() { log "ERROR: $@"; }
warning() { log "WARNING: $@"; }
info() { log "INFO: $@"; }

die() {
    error "$@"
    usage >&2
    exit 1
}

cleanup() {
    status="$?"
    rm -rf "${tmpdir}"
    return "${status}"
}

usage() {
    cat <<EOF
Usage: $(basename ${this}) [OPTION]... [DPKG_ACTION]...
Stop maintainer scripts from screwing with your host.

Options:
    -h       print usage and exit
    -I DIR   install to DIR

Examples:

    # self-install to /sbin (and register as \`DPkg::Pre-Install-Pkgs\`)
    \$ $(basename ${this}) -i /sbin

    # neuter the maintainer scripts within ros-kinetic-librealsense
    \$ $(basename ${this}) ros-kinetic-librealsense

EOF
}

################################################################################

trap cleanup EXIT
export TMPDIR="${tmpdir}"
export LC_ALL=C

while getopts ":hI:" opt; do
    case "${opt}" in
        h)
            usage
            exit 0
            ;;
        I) readonly install_dir="${OPTARG}" ;;
        :) die "missing argument: -${OPTARG}" ;;
        \?) die "bad option: -${OPTARG}" ;;
    esac
done
shift "$((${OPTIND} - 1))"

if [ -n "${install_dir:-}" ]; then
    if ! [ -d "${install_dir}" ]; then
        die "missing directory: ${install_directory}"
    fi
    cp "${this}" "${install_dir}/$(basename "${this}")"
    cat >"/etc/apt/apt.conf.d/00$(basename "${this}")" <<EOF
# /etc/apt/apt.conf.d/00$(basename ${this})
#
# * apt-config file for $(basename ${this})
# * sets up hook for neutering debian package maintainer scripts
# * based on https://gist.github.com/jordansissel/748313
# * installed $(date -u +"%Y-%m-%dT%H:%M:%SZ")

DPkg::Pre-Install-Pkgs { "xargs -rL1 ${install_dir}/$(basename ${this})" }
EOF
fi

case "$#" in
    0) exit 0 ;;
    1) readonly deb_file="$1" ;;
    *) die "bad args" ;;
esac

if ! [ -f "${deb_file}" ]; then
    die "missing file: ${deb_file}"
fi

inform "extracting from ${deb_file}: control.tar.gz"
ar -p "${deb_file}" control.tar.gz >control.tar.gz

readonly control_dir="$(mktemp -dt control.dir.XXXXXX)"
inform "extracting control.tar.gz to ${control_dir}"
tar -vxzf control.tar.gz -C "${control_dir}"

inform "finding maintainer scripts in ${control_dir}"
readonly maint_script_list="$(mktemp -t maint.script.list.XXXXXX)"
find "${control_dir}" -type f -perm /111 \
     -regextype posix-extended -regex "${control_dir}/(pre|post)(inst|rm)" \
     >"${maint_script_list}"

# neuter any maintainer scripts, log what we do
while read maint_script; do
    inform "found maintainer script: ${maint_script}"
    if grep -q ldconfig "${maint_script}"; then
        inform "replacing ${maint_script} with generic 'ldconfig' script"
        cat >"${maint_script}" <<'EOF'
#!/bin/sh
set -eu
case "${1:-}" in
    configure) ldconfig ;;
    remove) ldconfig ;;
    *) true ;;
esac
EOF
    else
        inform "removing ${maint_script}"
        rm -v "${maint_script}"
    fi
done <"${maint_script_list}"

inform "rebuilding control.tar.gz"
tar -vczf control.tar.gz -C "${control_dir}" .

inform "replacing ${deb_file} control.tar.gz"
ar -vr "${deb_file}" control.tar.gz

rm -v control.tar.gz

exit "$?"
