#!/bin/sh

set -euvx

readonly this="$(readlink -f "$0")"
readonly here="$(dirname "${this}")"
readonly whatami="$(basename "${here}").$(basename "${this}")"
readonly tmpdir="$(mktemp -dt "${whatami}.XXXXXX")"

log() { echo "${whatami}[$$]: $@" >&2; }
error() { log "ERROR: $@"; }
warning() { log "WARNING: $@"; }
info() { log "INFO: $@"; }

die() {
    error "$@"
    usage >&2
    exit 1
}

cleanup() {
    status="$?"
    rm -rf control.tar.gz "${tmpdir}"
    return "${status}"
}

usage() {
    cat <<EOF
Usage: $(basename ${this}) [OPTION]... [-- [GIT_PUSH_OPTION]...]
Push the current branch to all remote branches.

Options:
    -C DIR    run as if started in DIR (default: \$PWD)
    -h        print usage and exit

Examples:

    \$ $(basename ${this})

    \$ $(basename ${this}) -C ${here}

EOF
}

################################################################################

trap cleanup EXIT
export TMPDIR="${tmpdir}"
export LC_ALL=C

while getopts ":hC:" opt; do
    case "${opt}" in
        h)
            usage
            exit 0
            ;;
        C) readonly workdir="${OPTARG}" ;;
        :) die "missing argument: -${OPTARG}" ;;
        \?) die "bad option: -${OPTARG}" ;;
    esac
done
shift "$((${OPTIND} - 1))"

if ! [ -n "${workdir:-}" ]; then
    readonly workdir="${PWD}"
fi

readonly remote_list="$(mktemp -t remote.list.XXXXXX)"
git -C "${workdir}" remote --verbose | cut -f1 >"${remote_list}"
sort -uo "${remote_list}" "${remote_list}"

readonly branch_list="$(mktemp -t branch.list.XXXXXX)"
git -C "${workdir}" branch -a \
    | sed -nr 's|^  remotes/[^/]+/([[:graph:]]+)$|\1|gp' >"${branch_list}"

while read remote; do
    while read branch; do
        git -C "${workdir}" push $@ "${remote}" HEAD:"${branch}"
    done <"${branch_list}"
done <"${remote_list}"

exit "$?"
